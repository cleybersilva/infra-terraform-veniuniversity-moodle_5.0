name: Update Secrets

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente para atualizar secrets (dev, hom, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - hom
          - prod
      update_db_password:
        description: 'Atualizar senha do banco de dados'
        type: boolean
        default: false
      update_zone_id:
        description: 'Atualizar ID da zona Route53'
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  update-secrets:
    name: Update Environment Secrets
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.0.0"

      - name: Update Database Password
        if: ${{ github.event.inputs.update_db_password == 'true' }}
        run: |
          echo "Gerando nova senha de banco de dados..."
          NEW_DB_PASSWORD=$(openssl rand -base64 16)
          
          # Atualizar no Secret Manager da AWS
          aws secretsmanager create-secret --name "moodle/${{ github.event.inputs.environment }}/db-password" \
            --description "Moodle DB password for ${{ github.event.inputs.environment }}" \
            --secret-string "$NEW_DB_PASSWORD" \
            --tags Key=Environment,Value=${{ github.event.inputs.environment }} || \
          aws secretsmanager update-secret --secret-id "moodle/${{ github.event.inputs.environment }}/db-password" \
            --secret-string "$NEW_DB_PASSWORD"
          
          # Atualizar no arquivo terraform.tfvars
          cd infra/envs/${{ github.event.inputs.environment }}
          sed -i 's/db_password *= *"[^"]*"/db_password = "'"$NEW_DB_PASSWORD"'"/' terraform.tfvars
          
          echo "‚úÖ Senha do banco de dados atualizada com sucesso!"

      - name: Update Route53 Zone ID
        if: ${{ github.event.inputs.update_zone_id == 'true' }}
        run: |
          read -p "Digite o ID da zona do Route53: " ZONE_ID
          
          # Atualizar no arquivo terraform.tfvars
          cd infra/envs/${{ github.event.inputs.environment }}
          sed -i 's/route53_zone_id *= *"[^"]*"/route53_zone_id = "'"$ZONE_ID"'"/' terraform.tfvars
          
          echo "‚úÖ ID da zona Route53 atualizado com sucesso!"

      - name: Commit Changes
        run: |
          cd infra/envs/${{ github.event.inputs.environment }}
          
          # Configurar Git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Verificar se h√° altera√ß√µes para commit
          if [[ -z $(git status --porcelain) ]]; then
            echo "Nenhuma altera√ß√£o detectada."
            exit 0
          fi
          
          # Commit e push das altera√ß√µes
          git add terraform.tfvars
          git commit -m "Update secrets for ${{ github.event.inputs.environment }} environment [skip ci]"
          
          # Usar token do GitHub para push (evita problemas de permiss√£o)
          remote_repo="https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git push "${remote_repo}" HEAD:${{ github.ref }} -f

      - name: Send Slack Notification
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "üîê *Secrets Atualizados*\n*Ambiente:* ${{ github.event.inputs.environment }}\n*Respons√°vel:* ${{ github.actor }}\n*Atualiza√ß√µes:* DB Password: ${{ github.event.inputs.update_db_password }}, Zone ID: ${{ github.event.inputs.update_zone_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}